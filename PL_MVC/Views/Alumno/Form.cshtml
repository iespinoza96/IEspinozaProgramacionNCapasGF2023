@model ML.Alumno
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Alumno</h2>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Alumno", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.IdAlumno, new { @class = "hidden" })

                        @Html.TextBoxFor(model => model.IdAlumno, new { @class = "hidden form-control" })
                        @Html.ValidationMessageFor(model => model.IdAlumno)
                        @*hidden*@
                    </div>
                </div>
                <div class="row">

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Nombre)

                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })

                        @Html.ValidationMessageFor(model => model.Nombre)
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.ApellidoPaterno)
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno" })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.ApellidoMaterno)
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno" })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.FechaNacimiento)
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1"><i class="fa-solid fa-user-plus fa-fade" style="color:greenyellow"></i></span>
                            @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", @id = "txtApellidoMaterno" })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento)
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Horario.Turno)
                        <div class="input-group">
                            <span class="input-group-addon" id="basic-addon1"><i class="fa-solid fa-user-plus fa-fade" style="color:greenyellow"></i></span>
                            @Html.TextBoxFor(model => model.Horario.Turno, new { @class = "form-control", @id = "txtApellidoMaterno" })
                            @Html.ValidationMessageFor(model => model.Horario.Turno)
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Semestre)
                        @Html.DropDownListFor(model => model.Semestre.IdSemestre, new SelectList(Model.Semestre.Semestres, "IdSemestre", "Nombre"), "Selecciona un semestre correspondiente", new { @class = "form-control" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Horario.Grupo.Plantel)
                        @Html.DropDownListFor(model => model.Horario.Grupo.Plantel.IdPlantel, new SelectList(Model.Horario.Grupo.Plantel.Planteles, "IdPlantel", "Nombre"), "Selecciona un plantel", new { @class = "form-control", @id = "ddlPlantel" })
                    </div>
                    @if (Model.Horario.Grupo.Grupos != null)
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Horario.Grupo)
                            @Html.DropDownListFor(model => model.Horario.Grupo.IdGrupo, new SelectList(Model.Horario.Grupo.Grupos, "IdGrupo", "Nombre"), "Selecciona un Grupo", new { @class = "form-control", @id = "ddlGrupo" })
                        </div>
                    }
                    else
                    {
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Horario.Grupo)
                            @Html.DropDownListFor(model => model.Horario.Grupo.IdGrupo, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Grupo", new { @class = "form-control", @id = "ddlGrupo" })
                        </div>
                    }

                    <div class="input-group-addon mb-3">
                        <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-user-plus"></i></span>
                        <input id="fuImage" type='file' class="form-control" name="fuImage" onchange="validateFile(this), readURL(this);  " />
                    </div>


                    @if (Model.Imagen != null)
                    {

                        <img id="Img" src="data:image/*;base64,@Model.Imagen" style="width:250px ; height:250px" />

                    }
                    else
                    {
                        <img id="Img" src="~/Imagenes/SinImagen.png" style="width:250px ; height:250px" />
                    }
                </div>
              


                <div class="form-group">
                    <div class="col-md-3">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Alumno", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>

@Scripts.Render("~/bundles/jquery")
<script type="text/javascript">
     $(document).ready(function () {
        $("#ddlPlantel").change(function () {
            $("#ddlGrupo").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GrupoGetByIdPlantel")',
                dataType: 'json',
                data: { idPlantel: $("#ddlPlantel").val() },
                success: function (grupos) {
                    $("#ddlGrupo").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                    $.each(grupos, function (i, grupos) {
                        $("#ddlGrupo").append('<option value="'
                                                   + grupos.IdGrupo + '">'
                                                   + grupos.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed.' + ex);
                }
            });
        });
     });

    function validateFile() {
        var allowedExtension = ['jpeg', 'jpg', 'png']; 
        var fileExtension = document.getElementById('fuImage').value.split('.').pop().toLowerCase();
        var isValidFile = false;
        for (var index in allowedExtension) {
            if (fileExtension === allowedExtension[index]) {
                isValidFile = true;
                break;
            }
        }
        if (!isValidFile) {
            alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
            document.getElementById('fuImage').value = ""
        }
        return isValidFile;
    }

    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#Img').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

</script>